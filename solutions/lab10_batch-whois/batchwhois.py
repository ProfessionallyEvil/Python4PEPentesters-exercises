#!/usr/bin/python

#  Batch whois lookups
import sys
import ipwhois
import argparse


parser = argparse.ArgumentParser(description='Parse a target ip list and sort by whois network name.'
                                             'Also expand networks entries.')
parser.add_argument('input', help='The target input file')
parser.add_argument('output', nargs='?', type=argparse.FileType('w'), default=sys.stdout,
                    help=' The script output file.')
args = parser.parse_args()

namemap = {}

with open(args.input, 'r') as f:
    for line in f:
        line = line.strip()
        obj = ipwhois.IPWhois(line)
        print ('Looking up %s...' % line)
        results = obj.lookup_rdap(depth=1)
        if 'network' in results:
            if 'name' in results['network']:
                name = results['network']['name']
                if name not in namemap:
                    namemap[name] = {'hosts': [], 'networks': []}
                namemap[name]['hosts'].append(line)
                if 'start_address' in results['network'] and 'end_address' in results['network']:
                    network = '%s-%s' % (results['network']['start_address'], results['network']['end_address'])
                    if network not in namemap[name]['networks']:
                        namemap[name]['networks'].append(network)
            else:
                print ('No name!')
        else:
            print ('No network in entry!')

for name in namemap:
    args.output.write('%s targets\n' % name)
    for host in namemap[name]['hosts']:
        args.output.write('%s\n' % host)
    args.output.write('\n%s network blocks: \n' % name)
    for network in namemap[name]['networks']:
        args.output.write('%s\n' % network)
    args.output.write('\n')