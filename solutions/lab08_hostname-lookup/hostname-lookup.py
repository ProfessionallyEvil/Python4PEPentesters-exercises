#!/usr/bin/python

# Utility to do a reverse DNS lookup for an individual address or an entire list of ipv4 address
import argparse
import os
import sys
import re
import socket

ipv4_pattern = re.compile("^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$")


# for dns server lookups, see http://searchsignals.com/tutorials/reverse-dns-lookup/#pythonic-reverse-ip-lookups
def lookup_name(ip):
    try:
        x = socket.gethostbyaddr(ip)
        if len(x[0]) > -1:
            return x[0]
        else:
            return ip
    except:
        return ip


# TODO: support supplying a dns server
def rresolve(subargs):
    if ipv4_pattern.search(subargs.input):
        args.output.write('%s\n' % lookup_name(subargs.input))
    elif os.path.exists(subargs.input) and os.path.isfile(subargs.input):
        with open(subargs.input, 'r') as fin:
            for host in fin:
                subargs.output.write('%s\n' % lookup_name(host))
    else:
        print ("%s not recognized as a ipv4 address or file." % subargs.input)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Reverse-resolve all IP addresses in the supplied list.')

    parser.add_argument('input', help="An ipv4 address or a file of addresses.")
    parser.add_argument('output', nargs='?', type=argparse.FileType('w'), default=sys.stdout,
                        help="A file for output. By default output will go to stdout.")

    args = parser.parse_args()
    rresolve(args)
