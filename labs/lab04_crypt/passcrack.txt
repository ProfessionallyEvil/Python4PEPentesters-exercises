# You have encountered a shadow file entry for root on one of the systems
# you are testing.  Use the supplied password dictionary file to see if the root
# admin is using a weak password.  Use crypt.crypt(<password> , <salt>) to see
# if any of them match the value hashed.
#
# shadow entry:
# root:$6$eKgFUeR2$4gCxUJDrZehGdU1HBV2qd33Orby9wfqbvKuy.i0WJL6ktNkI7oEJzAn3VaY42q/m9TGasWvtVwF9PHd.KGM700:16223:0:99999:7:::

# STEP A:
# Get the basic functionality working as described, using the entry above.  Assuming we may eventually support larger
# wordlist files, provide periodic progress feedback.
# Hints:
# - The salt consists of everything between the first and 3rd '$', including the '$'  (i.e. '$6$eKgFUeR2$'), but crypt can
#   parse out the salt automatically if given the full password.
# - The entry produced by crypt prepends the salt, so it includes everything between the first and second ':'
# - Use the supplied 500-worst-passswords.txt password list (open in 'r' mode)
# - Don't forget to close the file when done

# STEP B:
# Use the argparse library to improve on the tool by handling the following arguments:
# - An argument to supply the path of a word list file
# - An argument to supply the path of a file containing shadow entries

# OPTIONAL - improve support for arbitrarily long wordlists. This may be easier after the log mining lab.